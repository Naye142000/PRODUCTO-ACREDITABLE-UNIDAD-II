---
title: "Proyecto"
author: "Nayeli Calderon Damian, Desly Nicoll Carranza Gonzáles, Damaris Monsalve Soto, Lluliana Mas Cruz, Geysler Mariñas Alvarado, Eunis Guelac Mendonza, Flor de maria Chavez Gomez"
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed_resources: true
    output-file: index
editor_options: 
  chunk_output_type: console
---
# Importar datos

```{r}
library(googlesheets4)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"

gs <- url %>% 
  as_sheets_id(url)

fb <- gs %>% 
  range_read("fb")
```
## Variable Twue

### Modelo lineal Twue
```{r}
modelo <- lm(formula = twue ~ bloque + geno + riego + riego*geno, data = fb)
anova(modelo)
```
### Modelo lineal mixto para twue
```{r}
library(lme4)
modelo <- lme4::lmer(formula = twue ~ riego + geno + riego*geno + (1|bloque)
              ,data = fb)
anova(modelo)


plot(modelo)

ol <- boxplot(twue~riego*geno, fb)
ol
library(inti)
model <- remove_outliers(data = fb
                         ,formula = twue ~ riego + geno + riego*geno + (1|bloque)
              ,plot_diag = T
              )
model
```

### Box Plot Twue
```{r}
# Boxplot de Twue por Genotipo y Riego
ggplot(fb, aes(x = factor(geno), y = twue, fill = factor(riego))) +
  geom_boxplot() +
  labs(x = "Genotipo", y = "TWUE", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Boxplot de TWUE por Genotipo y Riego")
```
### Comparación de medias Twue

```{r}
library(agricolae)
library(tidyverse)
library(agricolae)
modelo <- lm(formula = twue ~ bloque + geno + riego + riego * geno, data = fb)

anova(modelo)

tukey_result <- HSD.test(modelo, c("geno", "riego"), group = TRUE)
 print(tukey_result)

plot(tukey_result)
```


### Gráfico en ggplot 2 para Twue
```{r}
library(ggplot2)

ggplot(fb, aes(x = geno, y = twue, colour = riego)) + 
         geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) + 
         labs(title = "Boxplot con interacción de niveles de riego y genotipo",
              x = "Interacción riego y genotipo",
              y = "peso seco del tuberculo")
```

### Comaparación de medias: emmeans para twue

```{r}
library(emmeans)

mc <- emmeans(modelo, ~ riego * geno)
mc <- emmeans(modelo, ~ riego + geno)
mc <- emmeans(modelo, ~ geno | riego)%>% 
as.data.frame(mc)

mc
```
### Plot para twue
```{r}
library(ggplot2)
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  # geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "Twue", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
## Variable TTRANS

### Modelo lineal para ttrans
```{r}
modelo <- lm(formula = ttrans ~ bloque + geno + riego + riego*geno, data = fb)
anova(modelo)
```
### Modelo lineal mixto para ttrans
```{r}
library(lme4)
modelo <- lme4::lmer(formula = ttrans ~ riego + geno + riego*geno + (1|bloque)
              ,data = fb)
anova(modelo)
plot(modelo)

ol <- boxplot(ttrans~riego*geno, fb)
ol
library(inti)
model <- remove_outliers(data = fb
                         ,formula = ttrans ~ riego + geno + riego*geno + (1|bloque)
              ,plot_diag = T
              )
model

```

### Box Plot ttrans
```{r}
# Boxplot de Ttrans por Genotipo y Riego
ggplot(fb, aes(x = factor(geno), y = ttrans, fill = factor(riego))) +
  geom_boxplot() +
  labs(x = "Genotipo", y = "ttrans", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Boxplot de Ttrans por Genotipo y Riego")
```
### Comparación de media ttrans

```{r}
library(agricolae)
library(agricolae)
library(tidyverse)
library(agricolae)

modelo <- lm(formula = ttrans ~ bloque + geno + riego + riego * geno, data = fb)
anova(modelo)

tukey_result <- HSD.test(modelo, c("geno", "riego"), group = TRUE)
 print(tukey_result)

plot(tukey_result)

```



### Gráfico en ggplot 2 para Twue
```{r}
modelo <- lm(formula = twue ~ bloque + geno + riego +riego*geno , data = fb)

anova(modelo)
```

```{r}
library(ggplot2)

ggplot(fb, aes(x = geno, y = twue, colour = riego)) + 
         geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) + 
         labs(title = "Boxplot con interacción de niveles de riego y genotipo",
              x = "Interacción riego y genotipo",
              y = "uso eficiente del agua del tubérculo")
```

### Comaparación de medias: emmeans para ttrans

```{r}
library(emmeans)

mc <- emmeans(modelo, ~ riego * geno)
mc <- emmeans(modelo, ~ riego + geno)
mc <- emmeans(modelo, ~ geno | riego)%>% 
as.data.frame(mc)

mc
```
### Plot para ttrans
```{r}
library(emmeans)
library(ggplot2)
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  # geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "Twue", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


### Análisis multivariado
```{r}
library(tidyverse)
library(corrplot)

# Eliminar filas con NA y seleccionar solo columnas numéricas no vacías
fb_clean <- fb %>%
  select_if(~ is.numeric(.) && any(!is.na(.))) %>%  # Selecciona solo columnas numéricas con al menos un valor no NA
  drop_na()  # Elimina filas con NA restantes

# Verificar que hay columnas numéricas suficientes para calcular la correlación
if (ncol(fb_clean) > 1) {
  # Calcular la matriz de correlación
  cor_matrix <- cor(fb_clean, use = "complete.obs")
  
  # Imprimir la matriz de correlación
  print(cor_matrix)
  
  # Visualizar la matriz de correlación
  corrplot(cor_matrix, method = "circle")
} else {
  cat("No hay suficientes columnas numéricas o datos completos para calcular la correlación.\n")
}
library(psych)
fb %>% 
  select_if(is.numeric) %>% 
  dplyr::select(!c("block")) %>% 
  pairs.panels(x = .
               , hist.col="red"
               , pch = 21
               , stars = TRUE
               , scale = FALSE
               , lm = TRUE
               )

```
### PCA para ttrans
```{r}
library(FactoMineR)
library(dplyr)
library(ggplot2)
library(gridExtra)

# Agrupar y resumir los datos
mv <- fb %>%
  group_by(riego, geno) %>%
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE), .names = "mean_{col}")) %>%
  ungroup()  # Desagrupar los datos después de resumir

# Realizar el PCA, ajustando quali.sup a las columnas cualitativas (riego y geno)
pca_result <- PCA(mv, scale.unit = TRUE, quali.sup = c(1, 2), graph = FALSE)

# Graficar los individuos
p1 <- plot.PCA(pca_result, habillage = "riego", title = "Gráfico de Individuos")

# Graficar las variables
p2 <- plot.PCA(pca_result, choix = "var", title = "Gráfico de Variables")

# Combinar las gráficas en una sola
grid.arrange(p1, p2, nrow = 1)
```
